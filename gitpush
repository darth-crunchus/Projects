#!/bin/bash

    gitHome="/home/$USER/githome"
    token="$(cat $gitHome/.mytoken)"
    gitUser=""

if [[ $token == "" ]] || [[ $gitUser == "" ]]; then
    echo "$(basename "$0"): First-time run: Please edit this script with your
text editor of choice and set the variables 'token' and
'gituser'. 

If you are unsure about how to obtain a token,
please visit 'https://github.com/settings/apps', click on
'Personal access tokens > Tokens (classic)', then click
'Generate new token > Generate new token (classic)'. Sign
in if necessary, add a note, select an expiry period,
then select all appropriate scopes for the token and
click 'Generate token'."
    exit 0
fi

if [[ $# -eq 0 ]]; then
    echo "$(basename "$0"): missing parameter: source repository" >&2
    echo
    echo "    Usage: $(basename "$0") <src-repo> [\"file_1 file_2 .. file_n\"] \"<commit-msg>\" <branch>" >&2
    exit 1
elif [[ $1 = -* ]]; then
    case $1 in
        -[hH]|--[Hh][Ee][Ll][Pp])
            echo "$(basename "$0") - A script to automate the process of pushing
          commits to github

    Usage: $(basename "$0") [src-repo|--help] [\"File_1 File_2 .. File_n\"] \"commit-msg\" branch

    Ex.: $(basename "$0") foo \"myfile myfile2\" \"Restructured conditional logic\" main

         src-repo - The name of the git repository you wish to push to github.
        filenames - file names are optional. $(basename "$0") will add all files in
                    src-repo if individual files are not specified.
       commit-msg - The changes you're making for the commit.
           branch -
       -h, --help - Display this help message and exit."
            exit 0
            ;;
        *)
            echo "$(basename "$0"): invalid option -- '$1'" >&2
            exit
            ;;
    esac
fi

if [[ ! -d $gitHome/$1 ]]; then
    echo "$(basename "$0"): cannot stat '$1': No such file or directory" >&2
    exit 1
elif [[ -z "$(ls -A "$gitHome"/"$1")" ]]; then
    echo "$(basename "$0"): '$1': directory is empty; no files to add, commit or push

Use 'git clone' to clone the intended repository  or add files to
repository '$1' and try again." >&2
    exit 1
else
    cd "$gitHome"/"$1" || exit 1
    sleep 1.5
    if [[ $1 = .* ]] ; then
        repo="$(echo "$1" | cut -c 2-)"
    else
        repo=$1
    fi
    if [[ $# -lt 2 ]] ; then
        echo "$(basename "$0"): missing parameter: commit message" >&2
        echo
        echo "    Usage: $(basename "$0") [src-repo|--help] [\"File_1 File_2 .. File_n\"] \
\"commit-msg\" branch" >&2
        exit 1
    elif [[ $# -lt 3 ]] ; then
        echo "$(basename "$0"): missing parameter: git branch" >&2
        echo
        echo "    Usage: $(basename "$0") [src-repo|--help] [\"File_1 File_2 .. File_n\"] \
\"commit-msg\" branch" >&2
        exit 1
    elif [[ $# -eq 3 ]] ; then
        git add .
        sleep 10
        git commit -m \""$2"\"
        sleep 10
        git remote set-url origin https://$token@github.com/$gitUser/"$repo"
        sleep 2
        git push origin "$3"
    elif [[ $# -eq 4 ]] ; then
        git add "$2"
        sleep 10
        git commit -m \""$3"\"
        sleep 10
        git remote set-url origin https://$token@github.com/$gitUser/"$repo"
        sleep 2
        git push origin "$4"
    fi
fi
